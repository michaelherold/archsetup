# => Preferences {{{
# =====================================================================

# Remaps tmux prefix to Control-a
unbind C-b
set -g prefix C-a

# Have `C-a C-a` sets C-a keypress to the current window
bind C-a send-prefix

# Improve colors
set -g default-terminal "screen-256color"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Faster escape sequences (default is 500ms)
# This helps when existing insert mode in vim: http://superuser.com/a/252717/65504
set -s escape-time 50

# Start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1

# Renumber windows sequentially after closing any of them
set -g renumber-windows on

# increase scrollback lines
set -g history-limit 10000

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# Disable programs changing window names via terminal escape sequence
set-window-option -g allow-rename off

# }}}
# => Status Line {{{
# =====================================================================

# Status bar
set -g status-utf8 on
set -g status-bg colour8
set -g status-fg colour234

# Current session
set -g status-left " #S "
set -g status-left-length 15
set -g status-left-fg colour229
set -g status-left-bg colour166

# Window list
set -g window-status-format "#[fg=colour231] #I #[fg=colour231]#W#[fg=colour166]#F "
set -g window-status-current-format "#[fg=colour117,bg=colour31] #I #[fg=colour231]#W#[fg=colour234]#F "
set -g window-status-separator ""

set -g status-right ""

# }}}
# => Global (Non-Prefixed) Key Bindings {{{
# =====================================================================

# Smart pane switching with awareness of vim splits
bind-key -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind-key -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind-key -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind-key -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind-key -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Use 'C-y' to paste clipboard
bind-key -n C-y run "xclip -out | tmux load-buffer - ; tmux paste-buffer"

# }}}
# => Primary (Prefixed) Key Bindings {{{
# =====================================================================

# Have new windows and panes open in the current directory
bind-key - split-window -c "#{pane_current_path}"
bind-key | split-window -c "#{pane_current_path}" -h
bind-key c new-window   -c "#{pane_current_path}"

# Bring back clear screen under tmux prefix
bind-key C-l send-keys "C-l"

# Bring back kill line under tmux prefix
bind-key C-k send-keys "C-k"

# Reload .tmux.conf
bind-key R source-file ~/.tmux.conf

# More intuitive resizing
bind-key < resize-pane -L 1
bind-key > resize-pane -R 1

# easily toggle synchronization (mnemonic: e is for echo)
bind-key e setw synchronize-panes on
bind-key E setw synchronize-panes off

# }}}
# => Copy-Mode Key Bindings {{{
# =====================================================================

# Use 'v' to begin selection as in Vim
unbind -t vi-copy v
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy C-v rectangle-toggle

# Use 'y' to copy to clipboar
bind-key -t vi-copy y copy-pipe "xclip -in -selection primary -filter | xclip -in -selection clipboard"

# Update default binding of 'Enter' to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "xclip -in -selection primary -filter | xclip -in -selection clipboard"

# vim:ft=conf:
# }}}
